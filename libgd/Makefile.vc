# To build locally get a copy of the dependancies (https://github.com/imazen/gd-win-dependencies)
# Then run 'nmake /f windows\Makefile.vc' in MS dev console
# To build tests as well 'nmake /f windows\Makefile.vc all'
# To build tests and execute them 'nmake /f windows\Makefile.vc check'

CC=cl
LD=link
LB=lib


PLATFORM=x64


BUILD_DIR=$(SRC_DIR)
GD_DLL=libgd.dll
GD_LIB=libgd_a.lib

SDR=$(BUILD_DIR)\obj^\
#TDR=$(BUILD_DIR)\tests^\
TARGETDLL=$(BUILD_DIR)\$(GD_DLL)
TARGETLIB=$(BUILD_DIR)\$(GD_LIB)

OBJECTS=$(SDR)gd.obj $(SDR)gd_color.obj $(SDR)gd_color_map.obj $(SDR)gd_transform.obj $(SDR)gdfx.obj $(SDR)gd_security.obj $(SDR)gd_gd.obj $(SDR)gd_gd2.obj $(SDR)gd_io.obj $(SDR)gd_io_dp.obj $(SDR)gd_gif_in.obj $(SDR)gd_gif_out.obj $(SDR)gd_io_file.obj $(SDR)gd_io_ss.obj $(SDR)gd_jpeg.obj $(SDR)gd_png.obj $(SDR)gd_ss.obj $(SDR)gd_topal.obj $(SDR)gd_wbmp.obj $(SDR)gdcache.obj $(SDR)gdfontg.obj $(SDR)gdfontl.obj $(SDR)gdfontmb.obj $(SDR)gdfonts.obj $(SDR)gdfontt.obj $(SDR)gdft.obj $(SDR)gdhelpers.obj $(SDR)gdtables.obj $(SDR)gdxpm.obj $(SDR)wbmp.obj $(SDR)gd_filter.obj $(SDR)gd_nnquant.obj $(SDR)gd_rotate.obj $(SDR)gd_matrix.obj $(SDR)gd_interpolation.obj $(SDR)gd_crop.obj $(SDR)gd_tiff.obj $(SDR)gd_tga.obj $(SDR)gd_bmp.obj $(SDR)gd_xbm.obj $(SDR)gd_color_match.obj $(SDR)gd_version.obj $(SDR)gd_filename.obj $(SDR)gdkanji.obj
# $(SDR)webpimg.obj $(SDR)gd_webpng.obj 

LIBS=kernel32.lib ole32.lib user32.lib advapi32.lib shell32.lib ws2_32.lib Dnsapi.lib Gdi32.Lib
LIBS_GD= freetype.lib libpng16.lib zlib.lib jpeg.lib
#libiconv_a.lib turbojpeg-static.lib

INCLUDES=/I$(PREFIX)\include /I$(LIBRARY_INC) /Isrc 

LDFLAGS=/nologo /nodefaultlib:libcmt /libpath:$(LIBRARY_LIB) /MACHINE:$(PLATFORM)

CFLAGS=/nologo /O2 /MD /TC\
       /DWIN32=1\
       /D_WIN32=1\
       /DMSWIN32=1\
       /DBGDWIN32=1\
       /DHAVE_FT2BUILD_H=1\
       /DHAVE_GD_H=1\
       /DHAVE_PNG_H=1\
       /DHAVE_GD_BUNDLED=1\
       /DHAVE_LIBFREETYPE=1\
       /DHAVE_LIBJPEG=0\
       /DHAVE_LIBPNG=1\
       /DHAVE_LIBZ=1\
       $(INCLUDES)

# pseudotargets

build_libs: make_dirs $(TARGETDLL) $(TARGETLIB)
all: build_libs

clean:
  @if exist $(SDR) rd $(SDR) /s /q
  @if exist $(TDR) rd $(TDR) /s /q
  @if exist $(BUILD_DIR)\*.exe del $(BUILD_DIR)\*.exe /q
  @if exist tests\test_config.h del tests\test_config.h /q




# helpers

make_dirs:
  @if not exist $(BUILD_DIR) mkdir $(BUILD_DIR)
  @if not exist $(SDR) mkdir $(SDR)

  
# libgd

$(TARGETDLL): $(OBJECTS)
  @$(LD) /DLL /OUT:$@ $(OBJECTS) $(LIBS_GD) $(LIBS) $(LDFLAGS)

$(TARGETLIB): $(OBJECTS)
  @$(LB) /OUT:$@ $(OBJECTS) $(LDFLAGS)

{src\}.c{$(SDR)}.obj::
  @$(CC) $(CFLAGS) /c $< /Fo$(SDR)